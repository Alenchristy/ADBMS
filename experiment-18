Experiment No: 18- NoSQL- CRUD operations

18  NoSQL – CRUD


1.      Write
a MongoDB query to create an INVOICE database and collections (CUSTOMER,
PRODUCT) and its corresponding documents.


> use invoice
switched to db invoice
> db.customer.insert({"name":"arnold","place":"kozhikode","age":"28","phno":"412442124"})
WriteResult({ "nInserted" : 1 })
> db.customer.insert({"name":"markram","place":"tvm","age":"33","phno":"123454235"})
WriteResult({ "nInserted" : 1 })
> db.customer.insert({"name":"ann","place":"ekm","age":"27","phno":"43542454235"})
WriteResult({ "nInserted" : 1 })
> db.customer.insert({"name":"manu","place":"goa","age":"35","phno":"41241254235"})
WriteResult({ "nInserted" : 1 })


> db.product.insert({"pname":"book","price":"45"})
WriteResult({ "nInserted" : 1 })
> db.product.insert({"pname":"pen","price":"15"})
WriteResult({ "nInserted" : 1 })
> db.product.insert({"pname":"pencil","price":"5"})
WriteResult({ "nInserted" : 1 })
> db.product.insert({"pname":"rubber","price":"4"})
WriteResult({ "nInserted" : 1 })





2.      Write
a MongoDB query to find all documents from the collection CUSTOMER

> db.customer.find().pretty()
{
	"_id" : ObjectId("62a6cbb11b34bc6b359d8fca"),
	"name" : "arnold",
	"place" : "kozhikode",
	"age" : "28",
	"phno" : "412442124"
}
{
	"_id" : ObjectId("62a6cbd61b34bc6b359d8fcb"),
	"name" : "markram",
	"place" : "tvm",
	"age" : "33",
	"phno" : "123454235"
}
{
	"_id" : ObjectId("62a6cbee1b34bc6b359d8fcc"),
	"name" : "ann",
	"place" : "ekm",
	"age" : "27",
	"phno" : "43542454235"
}
{
	"_id" : ObjectId("62a6cc061b34bc6b359d8fcd"),
	"name" : "manu",
	"place" : "goa",
	"age" : "35",
	"phno" : "41241254235"
}





3.      Write
a MongoDB query to update the city in the collection CUSTOMER.

> db.customer.update({"place":"goa"},{$set:{"place":"usa"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })





4.      Write
a MongoDB query to delete the first matched document whose city is “kozhikode”.


> db.customer.deleteOne({"place":"kozhikode"})
{ "acknowledged" : true, "deletedCount" : 1 }

> db.customer.find().pretty()
{
	"_id" : ObjectId("62a6cbd61b34bc6b359d8fcb"),
	"name" : "markram",
	"place" : "tvm",
	"age" : "33",
	"phno" : "123454235"
}
{
	"_id" : ObjectId("62a6cbee1b34bc6b359d8fcc"),
	"name" : "ann",
	"place" : "ekm",
	"age" : "27",
	"phno" : "43542454235"
}
{
	"_id" : ObjectId("62a6cc061b34bc6b359d8fcd"),
	"name" : "manu",
	"place" : "usa",
	"age" : "35",
	"phno" : "41241254235"
}

